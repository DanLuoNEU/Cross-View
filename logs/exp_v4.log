gpu_id:  0
num_workers:  2
T:  36
===train: 50samples ===
===test: 100samples ===
******New Binarization******
training dataset: NUCLA
alpha: 0.1 lam1: 2 lam2: 1
start training epoch: 0
**** c1 ****
idx  15
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.5279, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9960e-04,
        1.6321e-03, 2.3950e-03, 3.2863e-03, 1.9350e-02, 2.2001e-02, 4.6671e-02,
        4.7443e-02, 7.1888e-02, 7.2555e-02, 3.1727e-01, 5.2788e-01],
       device='cuda:0')
**** c2 ****
idx  13
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.1609, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.7603e-05, 1.2129e-04, 1.7993e-04, 3.0382e-04, 5.1660e-04,
        6.7269e-04, 7.5077e-04, 8.4552e-04, 9.7357e-04, 1.0260e-03, 1.1457e-03,
        1.2010e-03, 1.2197e-03, 2.3067e-03, 3.4206e-03, 3.4277e-03, 5.0903e-03,
        5.3207e-03, 5.6899e-03, 8.0559e-03, 9.2186e-03, 1.0974e-02, 1.2463e-02,
        1.2536e-02, 1.3886e-02, 1.8587e-02, 1.9190e-02, 2.3537e-02, 3.0085e-02,
        3.4624e-02, 3.4885e-02, 3.5344e-02, 3.6931e-02, 3.7092e-02, 3.7507e-02,
        6.1628e-02, 6.3666e-02, 7.8444e-02, 9.4707e-02, 1.6094e-01],
       device='cuda:0')
b1 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
b2 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
**** c1 ****
idx  43
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.0472, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.9499e-05, 5.8114e-05,
        1.3019e-03, 2.2432e-03, 3.4177e-03, 3.4957e-03, 4.2898e-03, 6.9286e-03,
        8.0219e-03, 1.0506e-02, 1.7170e-02, 3.8411e-02, 4.7233e-02],
       device='cuda:0')
**** c2 ****
idx  37
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.1439, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3783e-06, 2.3695e-05,
        2.5515e-05, 3.6539e-05, 5.9401e-05, 5.2193e-04, 5.4689e-04, 6.5585e-04,
        7.3357e-04, 7.7570e-04, 1.2702e-03, 1.3430e-03, 1.4949e-03, 1.8664e-03,
        1.9963e-03, 2.3667e-03, 2.5639e-03, 2.6209e-03, 2.8052e-03, 3.1036e-03,
        3.2514e-03, 3.4407e-03, 3.6329e-03, 3.6748e-03, 3.8930e-03, 3.8942e-03,
        3.9723e-03, 4.0240e-03, 4.0445e-03, 4.6682e-03, 4.7886e-03, 4.9774e-03,
        5.2100e-03, 5.4300e-03, 5.7164e-03, 5.9318e-03, 5.9950e-03, 6.1886e-03,
        6.2145e-03, 7.0361e-03, 7.1417e-03, 7.1825e-03, 7.7886e-03, 8.1665e-03,
        8.5496e-03, 9.0779e-03, 1.0039e-02, 1.0274e-02, 1.0340e-02, 1.0613e-02,
        1.1398e-02, 1.2442e-02, 1.3002e-02, 1.3162e-02, 1.3532e-02, 1.3867e-02,
        1.4217e-02, 1.4407e-02, 1.5160e-02, 1.5164e-02, 1.5227e-02, 1.5660e-02,
        1.5828e-02, 1.6091e-02, 1.6244e-02, 1.6626e-02, 1.7203e-02, 1.7622e-02,
        1.7704e-02, 1.8850e-02, 1.8967e-02, 1.9205e-02, 1.9544e-02, 2.0038e-02,
        2.0187e-02, 2.0226e-02, 2.1166e-02, 2.1901e-02, 2.2148e-02, 2.3532e-02,
        2.3938e-02, 2.3941e-02, 2.4314e-02, 2.4422e-02, 2.4758e-02, 2.4852e-02,
        2.5476e-02, 2.7234e-02, 2.7919e-02, 2.8230e-02, 2.9632e-02, 3.1088e-02,
        3.1242e-02, 3.1354e-02, 3.2702e-02, 3.2729e-02, 3.2980e-02, 3.7025e-02,
        4.1520e-02, 4.2397e-02, 4.6648e-02, 4.8076e-02, 5.0280e-02, 5.0611e-02,
        5.1107e-02, 5.2819e-02, 5.3875e-02, 5.9687e-02, 6.3532e-02, 6.6188e-02,
        6.7392e-02, 7.2570e-02, 7.4413e-02, 1.0974e-01, 1.4386e-01],
       device='cuda:0')
b1 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
b2 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
**** c1 ****
idx  26
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.2943, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9759e-06, 1.7994e-04, 2.7767e-04,
        3.3298e-04, 4.4123e-04, 4.8146e-04, 5.0205e-04, 6.6849e-04, 9.5184e-04,
        9.8556e-04, 9.9110e-04, 1.3832e-03, 1.5173e-03, 1.8364e-03, 1.9575e-03,
        2.0269e-03, 2.0572e-03, 2.1689e-03, 2.5032e-03, 2.5216e-03, 2.9958e-03,
        3.0224e-03, 3.1850e-03, 3.1851e-03, 3.1878e-03, 3.4672e-03, 3.7995e-03,
        3.9665e-03, 4.0307e-03, 4.6713e-03, 4.6795e-03, 4.8271e-03, 4.9416e-03,
        4.9764e-03, 5.0404e-03, 5.0691e-03, 5.0921e-03, 5.1507e-03, 5.2266e-03,
        5.2755e-03, 5.3002e-03, 5.4936e-03, 5.6044e-03, 5.7446e-03, 5.8099e-03,
        5.9339e-03, 6.0343e-03, 6.0749e-03, 6.1370e-03, 6.2667e-03, 6.3748e-03,
        6.5421e-03, 6.6039e-03, 6.6059e-03, 6.6638e-03, 6.8624e-03, 6.8665e-03,
        7.1038e-03, 7.1756e-03, 7.3311e-03, 7.4528e-03, 7.5462e-03, 7.6644e-03,
        7.8102e-03, 7.8141e-03, 7.8642e-03, 8.0077e-03, 8.4203e-03, 8.5747e-03,
        8.7681e-03, 9.0999e-03, 9.1518e-03, 9.3799e-03, 9.4447e-03, 9.4885e-03,
        9.5386e-03, 9.5464e-03, 9.6134e-03, 1.0395e-02, 1.0525e-02, 1.1541e-02,
        1.1803e-02, 1.3065e-02, 1.3276e-02, 1.3332e-02, 1.3741e-02, 1.3867e-02,
        1.3955e-02, 1.4132e-02, 1.4958e-02, 1.5007e-02, 1.6492e-02, 1.6639e-02,
        1.6749e-02, 1.7825e-02, 1.8182e-02, 1.8417e-02, 1.9134e-02, 2.0119e-02,
        2.0797e-02, 2.1328e-02, 2.1676e-02, 2.3312e-02, 2.3815e-02, 2.3939e-02,
        2.4609e-02, 2.4626e-02, 2.5712e-02, 2.6163e-02, 2.6600e-02, 2.9135e-02,
        2.9625e-02, 3.1017e-02, 3.1882e-02, 3.2004e-02, 3.2784e-02, 3.2938e-02,
        3.3040e-02, 3.5294e-02, 3.6844e-02, 3.7993e-02, 4.4769e-02, 4.4991e-02,
        4.6068e-02, 4.7028e-02, 4.9138e-02, 4.9874e-02, 5.8131e-02, 5.8720e-02,
        6.2637e-02, 7.2850e-02, 9.3709e-02, 1.1397e-01, 2.9434e-01],
       device='cuda:0')
**** c2 ****
idx  37
sparse min tensor(0., device='cuda:0')
sparse max tensor(0.3624, device='cuda:0')
sparse sort 1 sample tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.3982e-07, 1.7245e-05, 4.0957e-05, 4.3165e-05, 6.5821e-05,
        1.6603e-04, 3.3487e-04, 3.8139e-04, 5.6323e-04, 6.4528e-04, 9.1927e-04,
        1.0459e-03, 1.0966e-03, 1.1286e-03, 1.3111e-03, 1.3673e-03, 1.4687e-03,
        1.4882e-03, 1.5703e-03, 1.8855e-03, 1.9294e-03, 1.9449e-03, 2.0540e-03,
        2.1990e-03, 2.6062e-03, 2.6237e-03, 2.6319e-03, 2.9596e-03, 3.2094e-03,
        3.5783e-03, 3.6428e-03, 4.2680e-03, 4.4221e-03, 4.6921e-03, 4.9115e-03,
        4.9344e-03, 5.1069e-03, 5.4244e-03, 5.5674e-03, 5.6948e-03, 6.0994e-03,
        6.1463e-03, 6.2334e-03, 6.3886e-03, 6.5892e-03, 6.8285e-03, 6.9041e-03,
        7.2225e-03, 7.2426e-03, 7.3297e-03, 7.3531e-03, 7.5430e-03, 7.8746e-03,
        7.9045e-03, 7.9920e-03, 8.2163e-03, 8.3501e-03, 8.5096e-03, 8.6231e-03,
        8.7874e-03, 8.8174e-03, 8.9156e-03, 9.1119e-03, 9.4408e-03, 9.4860e-03,
        9.6972e-03, 9.8474e-03, 9.9197e-03, 1.0094e-02, 1.0270e-02, 1.0608e-02,
        1.0654e-02, 1.0703e-02, 1.0986e-02, 1.1234e-02, 1.1867e-02, 1.2064e-02,
        1.2127e-02, 1.2202e-02, 1.2504e-02, 1.2744e-02, 1.2958e-02, 1.3022e-02,
        1.3929e-02, 1.4066e-02, 1.4475e-02, 1.4670e-02, 1.5497e-02, 1.5769e-02,
        1.6198e-02, 1.6688e-02, 1.7539e-02, 1.7600e-02, 1.7673e-02, 1.7819e-02,
        1.9201e-02, 1.9202e-02, 2.0812e-02, 2.2561e-02, 2.3428e-02, 2.3507e-02,
        2.5629e-02, 2.6111e-02, 3.3662e-02, 3.5858e-02, 3.6378e-02, 4.4160e-02,
        4.4185e-02, 4.5515e-02, 4.7295e-02, 5.1052e-02, 5.1887e-02, 6.1988e-02,
        6.2153e-02, 6.8061e-02, 7.9419e-02, 9.6550e-02, 3.6240e-01],
       device='cuda:0')
b1 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
b2 stats  tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(0., device='cuda:0', grad_fn=<MaxBackward1>)
[W python_anomaly_mode.cpp:104] Warning: Error detected in NativeGroupNormBackward. Traceback of forward call that caused the error:
  File "trainClassifier_Multi.py", line 201, in <module>
    label_clip2, b2, outClip_v2, c2 = net(v2_clip, t2)
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/balaji/Documents/code/RSL/CS_CV/Cross-View/modelZoo/BinaryCoding.py", line 312, in forward
    label = self.Classifier(temp)
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/balaji/Documents/code/RSL/CS_CV/Cross-View/modelZoo/BinaryCoding.py", line 207, in forward
    x = self.gn3(x)
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/balaji/Documents/code/RSL/CS_CV/Cross-View/modelZoo/BinaryCoding.py", line 68, in forward
    input, self.num_groups, self.weight, self.bias, self.eps)
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/nn/functional.py", line 2359, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
 (function _print_stack)
Traceback (most recent call last):
  File "trainClassifier_Multi.py", line 284, in <module>
    loss.backward()
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/_tensor.py", line 255, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/yuexi/pyenv_1.6/lib/python3.6/site-packages/torch/autograd/__init__.py", line 149, in backward
    allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
RuntimeError: Function 'NativeGroupNormBackward' returned nan values in its 0th output.
